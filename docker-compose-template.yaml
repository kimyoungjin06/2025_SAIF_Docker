services:
  postgres:
    image: postgres:15-alpine
    container_name: voting-postgres-${USER_ID}
    environment:
      POSTGRES_DB: voting_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: voting_password_123
    volumes:
      - postgres_data_${USER_ID}:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/01-init.sql
    ports:
      - "${DB_PORT}:5432"
    networks:
      - voting-network-${USER_ID}

  voting-api:
    build: ./api-server
    container_name: voting-api-${USER_ID}
    depends_on:
      - postgres
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=voting_db
      - DB_USER=postgres
      - DB_PASSWORD=voting_password_123
    ports:
      - "${API_PORT}:3001"
    networks:
      - voting-network-${USER_ID}

  voting-app:
    build: ./voting-app
    container_name: voting-frontend-${USER_ID}
    depends_on:
      - voting-api
    environment:
      - REACT_APP_API_URL=http://localhost:${API_PORT}
      - REACT_APP_DASHBOARD_URL=http://localhost:${DASHBOARD_PORT}
    ports:
      - "${FRONTEND_PORT}:3000"
    networks:
      - voting-network-${USER_ID}

  dashboard:
    build: ./dashboard
    container_name: voting-dashboard-${USER_ID}
    depends_on:
      - voting-api
    environment:
      - REACT_APP_API_URL=http://localhost:${API_PORT}
    ports:
      - "${DASHBOARD_PORT}:3000"
    networks:
      - voting-network-${USER_ID}

volumes:
  postgres_data_${USER_ID}:

networks:
  voting-network-${USER_ID}:
    driver: bridge